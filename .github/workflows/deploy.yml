name: Deploy App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0

    - name: Build Docker image
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: availe:latest
        platforms: linux/arm64/v8

    - name: Save Docker image
      run: |
        docker save availe:latest | gzip > availe.tar.gz

    - name: Upload Docker images to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: "availe.tar.gz, docker-compose.yml, nginx.conf"
        target: "${{ secrets.TARGET_PATH }}"

    - name: Generate .env file
      run: |
        echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}" > .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

    - name: Upload .env file to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: ".env"
        target: "${{ secrets.TARGET_PATH }}"

    - name: Deploy Docker image on EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ secrets.TARGET_PATH }}
          docker-compose down
          docker ps -q --filter "publish=3000" | xargs -r docker stop
          docker rmi availe:latest || true
          docker load < availe.tar.gz
          docker-compose up -d